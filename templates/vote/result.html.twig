{% extends "body.html.twig" %}



{% block main %}
    <main class="container">

        {% if proposal is null %}
            <div class="row mt-5">
                <div class="col-12">
                    <h1>Ooops ! Proposition inexistante</h1>
                    <p>Cette proposition n'existe pas ou n'est plus disponible au vote.</p>
                    <p>N'hésitez pas à soumettre une nouvelle proposition <a href="{{ path("app_jm_form") }}">en cliquant-ici</a></p>
                </div>
            </div>
            {% else %}
            <div class="row mt-5">
                <div class="col-12">
                    <h1>Jugement Majoritaire</h1>
                    <p>Cette page présente le résultat d'une porposition votée en utilisant le mode de scrutin appelé "jugement majoritaire". Pour en savoir plus sur le jugement majoriatire vous pouvez <a href="https://youtu.be/YC1xDJsi_Hk">consulter cette vidéo </a>.</p>
                    <p>N'hésitez pas à soumettre vous même une nouvelle proposition <a href="{{ path("app_jm_form") }}">en cliquant-ici</a></p>
                    <hr/>
                    <h4>Auteur :</h4>
                    <p>{{ proposal.author|default('Anonyme') }}
                    <h4>Présentation :</h4>
                    <p>{{ proposal.presentation }}</p>
                    <h4>Résultat :</h4>
                  <p><b>{{ winner.label }}</b> <i>(Déterminé par {{ proposal.participations|length }} participation(s).)</i></p>
                    <hr />
                    <h4>Classement :</h4>
<ol>
                    {% for winner in winners  %}
                       <li>{{ winner.winner.label  }} <span class="badge badge-secondary">{{ winner.keyExplication }})</span></li>
                    {% endfor %}
</ol>
                    <hr />
                    <h4>Profile de mérite :</h4>
                    <table class="table table-bordered">
                        <thead>
                        <tr>
                            <th scope="col">#</th>
                            {% for choice in proposal.choices  %}
                                 <th scope="col">{{ choice.label }}</th>
                            {% endfor %}

                        </tr>
                        </thead>
                        <tbody>

                            {% for mention_value,mention_label  in mentions %}
                            <tr>
                                <th scope="row" style="background-color:#{{ mention_colors[mention_value] }};">{{ mention_label }}</th>

                                {%  for choice in proposal.choices  %}
                                <td >{{ meritProfiles[choice.id][mention_value]|round(2) }} %</td>
                                 {% endfor %}




                            </tr>
                            {% endfor %}


                        </tbody>
                    </table>
                    <hr />
                    <h4>Histogramme :</h4>
                    <div id="chart" style="height:600px"></div>
                    </div>
                    <p class="mb-5">&nbsp;</p>

                </div>
            </div>
            {%  endif %}
    </main>
{% endblock %}

{% block javascripts %}
    <script type="text/javascript">
        new Chartist.Bar('#chart', {
            labels: [
                {% for choice in proposal.choices  %}'{{ choice.label }}',{% endfor %}


            ],
            series: [
                {% for mention_value,mention_label in mentions  %}
                [
                    {% for choice in proposal.choices  %}
                     {{ meritProfiles[choice.id][mention_value] }},
                    {% endfor %}
                ],
                {% endfor %}
            ]
        }, {
            stackBars: true,
            axisY: {
                labelInterpolationFnc: function(value) {
                    if(value>100){
                        return ""
                    }else{
                        return (value) + '%';
                    }

                }
            }
        }).on('draw', function(data) {
            if(data.type === 'bar') {
                data.element.attr({
                    style: 'stroke-width: {{ (100/(proposal.choices|length + 1 ))|round(2, 'floor') }}%'
                });
            }
        });


    </script>
{% endblock %}

{% block stylesheets %}
<style>
    {% set alphabet = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'] %}
     {% for mention_value,mention_label in mentions  %}
     .ct-series-{{ alphabet[loop.index-1]|lower }} .ct-bar{
         stroke:#{{ mention_colors[mention_value] }};
     }
     {% endfor %}



</style>
{% endblock stylesheets %}